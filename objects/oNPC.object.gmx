<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oCreature</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

char = '?';
colour = c_purple;

cell_current_left  = oGame.map_display[x - 1, y];
cell_current_right = oGame.map_display[x + 1, y];
cell_current_top   = oGame.map_display[x, y - 1];
cell_current_bot   = oGame.map_display[x, y + 1];

dir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controller

event_inherited();

cell_current_left  = oGame.map_display[x - 1, y];
cell_current_right = oGame.map_display[x + 1, y];
cell_current_top   = oGame.map_display[x, y - 1];
cell_current_bot   = oGame.map_display[x, y + 1];

/*
if move_timer == false
{
    dir = irandom(3);
    move_timer = true;
    move_timer_count = move_timer_max;
    switch(dir)
    {
        case 0: //left
            pos_check[0] -= move_distance;
            break;
        case 1: //right
            pos_check[0] += move_distance;
            break;
        case 2: //up
            pos_check[1] -= move_distance;
            break;
        case 3: //down
            pos_check[1] += move_distance;
            break;
    }
}
else
{
    if move_timer_count &gt; 0
    {
        move_timer_count -= 1;
    }
    else
    {
        move_timer = false;
    }
}

var cell_next = oGame.map[pos_check[0], pos_check[1]];
if cell_next.solid == false
{
    x = pos_check[0];
    y = pos_check[1];
}
*/
if (cell_current_left.object_index == oPlayer or cell_current_right.object_index == oPlayer or cell_current_top.object_index == oPlayer or cell_current_bot.object_index == oPlayer)
{
    mess = instance_create(0, 0, oMessage);
    mess.parent = id;
}
else if instance_exists(oMessage)
{
    with(oMessage)
    {
        instance_destroy();
    }
}

//oGame.map[x, y] = id;

if hp == 0
{
    audio_play_sound(sndDeath, 1, false);
}

//oGame.map_display[x, y] = oNPC;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
