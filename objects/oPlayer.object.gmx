<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>oCreature</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attributes
event_inherited();

// Basic attributes
char = '@'; //graphic
colour = c_white; //colour

// Player attributes + variables
shift_time = 0;
step_count = 0;

pos_last[2] = 0;
pos_2nd_last[2] = 0;
pos_check[2] = 0;

move_timer = false;
move_timer_count = 0;
move_timer_max = 8;
move_time_mult = 3;

//run = false;
run = true; // delete this and un-comment the above line when not testing run mechanics
oGame.map[x, y] = instance_create(x, y, oSpace);

global.follower = instance_create(x + 1, y, oFollower);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls

event_inherited();

var cell_current = oGame.map_display[x, y];

if move_timer == false
{
    if keyboard_check(vk_shift) and run == true
    {
        check_running();
    }
    else
    {
        check_walking();
    }
    
    var cell_next = oGame.map[pos_check[0], pos_check[1]];

    if cell_next.solid == false
    {
        if step_count &lt; 5
        {
            step_count += 1;
        }
        oGame.map_display[x, y] = oGame.map[x, y];
        x = pos_check[0];
        y = pos_check[1];
    }
    else
    {
        if keyboard_check(vk_shift) and run == true
        {
            screen_shake(oScreen.shake_count_max_crash, 4*step_count);
            move_timer = true;
            move_timer_count = oScreen.shake_count_max_crash;
            
            if step_count &gt; 4
            {
                oGame.map[pos_check[0], pos_check[1]].hp = 0;
                oGame.map[pos_check[0], pos_check[1]] = instance_create(pos_check[0], pos_check[1], oGame.map[pos_check[0], pos_check[1]].dead);
                oGame.map_display[pos_check[0], pos_check[1]] = oGame.map[pos_check[0], pos_check[1]];
            }
        }
        else
        {
            screen_shake(oScreen.shake_count_max_bump, 4);
            move_timer = true;
            move_timer_count = oScreen.shake_count_max_bump;
        }
        audio_play_sound(sndBump, 1, false);
        step_count = 0;
    }
}
else
{
    if move_timer_count &gt; 0
    {
        move_timer_count -= 1;
    }
    else
    {
        move_timer = false;
        // put shift speed multipler here if shift is pressed! decrease move_timer_ma or it's equivalent
    }
}

oGame.map_display[x, y] = global.player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
