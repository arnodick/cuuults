<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>oThing</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attributes
event_inherited();

// Basic attributes
char = '@'; //graphic
colour_init = c_white; //colour
colour = colour_init;

// Player attributes + variables

oGame.map[x, y] = instance_create(x, y, oSpace);
// TODO: properly destroy instance at this position

move_init(move_types.key, 16, 1); // set this to 1 for instant movement
check_creature_init();

solid = true;

carry = false;
carrying = 0;
carry_dir[0] = 0;
carry_dir[1] = 0;

audio_listener_position(x, y, 0);
audio_listener_orientation(0, 1, 0, 0, 0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
animate_walk = !animate_walk;
//alarm[0] = 4;
if (animate_walk == true)
{
    audio_sound_pitch(sndStep, random_range(0.5, 1.5));
    audio_sound_gain(sndStep, 0.5, 0);
    audio_play_sound(sndStep, 1, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls

// TODO: BUG: this makes you halt if you pressed shift WHILE mvoing?

if (keyboard_check_pressed(ord('X')))
{
    if (carrying == false)
    move_speed = move_speed_init/2;
}
else if (keyboard_check_released(ord('X')))
{
    if (carrying == false)
    move_speed = move_speed_init;
}
//else
//{
//}

if (key_arrows_check() == true)
{
    move(move_type, -1);
    check_carry();
    global.go = true;
}
else
{
    global.go = false;
}

if (stopped_wall == true)
{
    var cell_next = check_pos(x + move_dir[0], y + move_dir[1]);
    var cant_move = cell_next.solid;
    
    // TODO: put this and sound playing at END of timer for collision
    // maybe put it so if move_type == mt_key then do this bumpy thing
    if (cant_move == true)
    {
        move_stopped_wall(cell_next, 1);
    }
    //TODO put code for moving rocks around by bumping into them here
}
audio_listener_position(x, y, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
